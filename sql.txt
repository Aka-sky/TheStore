CREATE TABLE "user" (
    username character varying PRIMARY KEY,
    name character varying NOT NULL,
    email_id character varying NOT NULL,
    password character varying NOT NULL,
    contact character varying,
	location character varying,
    branchYear character varying
);

//-------------- This part won't work as "user" table structure is
changed. So enter data from signup page. 

INSERT INTO "user" VALUES ('akashkamble0730','Akash Kamble','akashkamble0730@gmail.com','passAk','9833114068','daf','2018');
INSERT INTO "user" VALUES ('someone1','S','someono1@gmail.com','passSo','9833114069','da','2019');
INSERT INTO "user" VALUES ('someone2','S','someono2@gmail.com','passSo','9833114070','d','2020');
INSERT INTO "user" VALUES ('someone3','S','someono3@gmail.com','passSo','9833114071','idhd','2021');
-----------------------------------------// 

CREATE TABLE product (
    product_id SERIAL PRIMARY KEY ,
    name character varying NOT NULL,
    years_of_usage INT,
    price INT NOT NULL,
    buyer_id character varying,
    image character varying,
    seller_id character varying NOT NULL,
    description character varying NOT NULL,
    FOREIGN KEY (buyer_id) REFERENCES "user" (username) ON DELETE SET NULL,
    FOREIGN KEY (seller_id) REFERENCES "user" (username) ON DELETE CASCADE
);

INSERT INTO product (name,years_of_usage,price,image,description,seller_id) VALUES ('CLRS',1,450,'../images/booksvg.svg','This the short description of the product with less than 50 characters.','akashkamble0730');
INSERT INTO product (name,years_of_usage,price,image,description,seller_id) VALUES ('Lab Coat',1,400,'../images/booksvg.svg','This the short description of the product with less than 50 characters.','akashkamble0730');
INSERT INTO product (name,years_of_usage,price,image,description,seller_id) VALUES ('Computer',2,15000,'../images/booksvg.svg','This the short description of the product with less than 50 characters.','someone4');
INSERT INTO product (name,years_of_usage,price,image,description,seller_id) VALUES ('CLRS',1,300,'../images/notes.jpg','This the short description of the product with less than 50 characters.','akashkamble0730');
INSERT INTO product (name,years_of_usage,price,image,description,seller_id) VALUES ('CLRS',2,430,'../images/notes.jpg','This the short description of the product with less than 50 characters.','akashkamble0730');
INSERT INTO product (name,years_of_usage,price,image,description,seller_id) VALUES ('DBMS',2,460,'../images/booksvg.svg','This the short description of the product with less than 50 characters.','someone2');


CREATE TABLE "cart" (
    username character varying,
    product_id int,
    PRIMARY KEY (username, product_id),
    FOREIGN KEY (username) REFERENCES "user" (username) ON DELETE SET NULL,
    FOREIGN KEY (product_id) REFERENCES "product" (product_id) ON DELETE SET NULL
); 

INSERT INTO cart VALUES ('akashkamble0730',3);
INSERT INTO cart VALUES ('someone1',1);
INSERT INTO cart VALUES ('someone1',2);

CREATE TABLE "book"(
	  product_id int,
	  publication character varying NOT NULL,
	  edition character varying NOT NULL,
	  subject character varying NOT NULL,
	  PRIMARY KEY (product_id),
      FOREIGN KEY (product_id) REFERENCES "product" (product_id) ON DELETE CASCADE,
      CONSTRAINT notnullchecker CHECK (
        NOT (
        ( publication IS NULL  OR  publication = '' )
            OR
        ( edition IS NULL  OR  edition = '' )
            OR
        ( subject IS NULL OR subject = '' )
   )
 )
);

insert into "book" VALUES (1, 'Clrs publications','9th edition','data structers');
insert into "book" VALUES (4, 'Clrs publications','8th edition','data structers');

CREATE TABLE "calculator"(
	  product_id int, -- 
	  brand character varying NOT NULL, -- 
	  model character varying NOT NULL,
	  features character varying NOT NULL,
	  PRIMARY KEY (product_id),
	  FOREIGN KEY (product_id) REFERENCES "product" (product_id) ON DELETE CASCADE,
	  CONSTRAINT notnullchecker CHECK (
        NOT (
        ( brand IS NULL  OR  brand = '' )
            OR
        ( model IS NULL  OR  model = '' )
            OR
        ( features IS NULL OR features = '' )
   )
 )
	);

INSERT INTO "product" (name,years_of_usage,price,image,description,seller_id) VALUES ('CASIO ES 991',2,250,'../images/booksvg.svg','Scientific calculator for all.','someone4');

INSERT INTO "calculator" VALUES (8, 'CASIO', 'EX-991 PLUS', '1000 functions');

CREATE TABLE "clothing"
	(
	  product_id int,
	  size character varying NOT NULL,
	  "type" character varying NOT NULL,
	  color character varying NOT NULL,
	  detailedcondition character varying NOT NULL,
	  PRIMARY KEY (product_id),
	   FOREIGN KEY (product_id) REFERENCES "product" (product_id) ON DELETE CASCADE,
	   CONSTRAINT notnullchecker CHECK (
        NOT (
        ( size IS NULL  OR  size = '' )
            OR
        ( type IS NULL  OR  type = '' )
            OR
        ( color IS NULL OR color = '' )
            OR
        ( detailedcondition IS NULL OR detailedcondition = '' )    
   )
 )
	);

INSERT INTO "clothing" VALUES (2,'XL','Cotton','White','1 acid mark on upper pocket.');

SELECT * FROM product;

CREATE TABLE "notes"(
	  "product_id" serial,
	  "subject" character varying NOT NULL,
	  "topic" character varying NOT NULL,
	  "professorname" character varying NOT NULL,
	  "year" character varying NOT NULL,
	  PRIMARY KEY ("product_id"),
	  FOREIGN KEY (product_id) REFERENCES "product" (product_id) ON DELETE CASCADE,
	  CONSTRAINT notnullchecker CHECK (
        NOT (
        ( subject IS NULL  OR  subject = '' )
            OR
        ( topic IS NULL  OR  topic = '' )
            OR
        ( professorname IS NULL OR professorname = '' )
            OR
        ( year IS NULL OR year = '' )    
   )
 )
	);

INSERT INTO "notes" VALUES (5, 'DATA STRUCTURES', 'Sorting And Searching', 'Sir. Ranjit', '2020');
INSERT INTO "notes" VALUES (6, 'DBMS', 'Sequencing', 'Mayuri More', '2020');

CREATE TABLE "other"
	(
	  "product_id" int ,
	  "description" character varying NOT NULL,
	  "category" character varying,
	  PRIMARY KEY ("product_id"),
	   FOREIGN KEY (product_id) REFERENCES "product" (product_id) ON DELETE CASCADE,
	   CONSTRAINT notnullchecker CHECK (
        NOT (
        ( description IS NULL  OR  description = '' )
            OR
        ( category IS NULL  OR  category = '' )
   )
 )
	);

INSERT INTO "product" (name,years_of_usage,price,image,description,seller_id) VALUES ('Something',2,460,'../images/booksvg.svg','some item not belonging to any of the categories specified.','someone2');

INSERT INTO "other" VALUES (9, 'What to say about this product as type not known.', 'Unknown');

CREATE TABLE "pc"
	(
	  "product_id" int,
	  "os" character varying,
	  "ram" int,
	  "storage" int,
	  "brand" character varying,
	  "processor" character varying,
        PRIMARY KEY ("product_id"),
        FOREIGN KEY (product_id) REFERENCES "product" (product_id) ON DELETE CASCADE,
        CONSTRAINT notnullchecker CHECK (
        NOT (
        ( os IS NULL  OR  os = '' )
            OR
        ( ram IS NULL)
            OR
        ( storage IS NULL)
            OR
        ( brand IS NULL OR brand = '' )
            OR
        ( processor IS NULL oR processor = '' )
   )
 )
);

INSERT INTO "pc" VALUES (3, 'Windows 10',4,500, 'HP','Intel Pentium');

CREATE table "comments" (
comment_id SERIAL PRIMARY KEY,
username character varying,
product_id int,
content character varying NOT NULL,
FOREIGN KEY (product_id) REFERENCES "product" (product_id) ON DELETE CASCADE,
FOREIGN KEY (username) REFERENCES "user" (username) ON DELETE CASCADE
);

INSERT INTO "comments" (username, product_id, content) VALUES ('akashkamble0730',1,'This is great product. A must buy for anyone who is interested in understanding data structures and analysis.');
INSERT INTO "comments" (username, product_id, content) VALUES ('someone1',1,'Great product. Good Condition. A few drawings on some pages but thats acceptable.');
INSERT INTO "comments" (username, product_id, content) VALUES ('someone2',2,'A perfect fit. Condition was also great. The seller is a trustworthy person.');
INSERT INTO "comments" (username, product_id, content) VALUES ('someone3',3,'Worst product. PC not working properly the seller tried to cheat.');

ALTER TABLE "product"
  ADD COLUMN "doc_with_weights" tsvector;

update "product"
set "doc_with_weights" = setweight(to_tsvector("name"), 'A') ||
  setweight(to_tsvector("description"), 'B');

CREATE INDEX "doc_weights_idx"
  ON "product"
  USING GIN ("doc_with_weights");

select *
from "product"
where "doc_with_weights" @@ plainto_tsquery('Computer')
order by ts_rank("doc_with_weights", plainto_tsquery('Computer')) desc;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alter table "user" rename column "branchYear" to "year";
alter table "product" rename column "image" to "product_image";
alter table "product" rename column "name" to "product_name";
alter table "notes" rename column "professor Name" to "professor";
alter table"notes" rename column "year" to "noteyear";

CREATE VIEW bookview AS
select "product".product_id,"product".product_name,"product".years_of_usage,"product".price,"product".product_image,"product".condition,"product".category,
username, name, email_id, contact, location, year, "book".author,"book".publication,"book".edition,"book".subject
from "product" inner join "user" on
"product".seller_id = "user".username inner join "book" on 
"product".product_id = "book".product_id;

CREATE VIEW notesview AS
select "product".product_id,"product".product_name,"product".years_of_usage,"product".price,"product".product_image,"product".condition,"product".category,
username, name, email_id, contact, location, year, "notes".topic,"notes".professor,"notes".noteyear,"notes".subject
from "product" inner join "user" on
"product".seller_id = "user".username inner join "notes" on 
"product".product_id = "notes".product_id;

CREATE VIEW clothview AS
select "product".product_id,"product".product_name,"product".years_of_usage,"product".price,"product".product_image,"product".condition,"product".category,
username, name, email_id, contact, location, year, "clothing".size,"clothing".type,"clothing".color
from "product" inner join "user" on
"product".seller_id = "user".username inner join "clothing" on 
"product".product_id = "clothing".product_id;

CREATE VIEW otherview AS
select "product".product_id,"product".product_name,"product".years_of_usage,"product".price,"product".product_image,"product".condition,"product".category,
username, name, email_id, contact, location, year,"other".type,"other".description
from "product" inner join "user" on
"product".seller_id = "user".username inner join "other" on 
"product".product_id = "other".product_id;

CREATE VIEW pcview AS
select "product".product_id,"product".product_name,"product".years_of_usage,"product".price,"product".product_image,"product".condition,"product".category,
username, name, email_id, contact, location, year,"pc".os,"pc".ram,"pc".storage,"pc".brand, "pc".processor
from "product" inner join "user" on
"product".seller_id = "user".username inner join "pc" on 
"product".product_id = "pc".product_id;

CREATE VIEW calcview AS
select "product".product_id,"product".product_name,"product".years_of_usage,"product".price,"product".product_image,"product".condition,"product".category,
username, name, email_id, contact, location, year,"calculator".brand,"calculator".model,"calculator".features
from "product" inner join "user" on
"product".seller_id = "user".username inner join "calculator" on 
"product".product_id = "calculator".product_id;